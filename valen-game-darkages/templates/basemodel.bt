#include "common.bt"

struct Md6Header {
    StrP32     skeletonName;
    Vec3       minBoundsExpansion;
    Vec3       maxBoundsExpansion;
    ubyte      remapForSkinning;
    StrP32     unknown;
    u16        numSkinnedJoints;
    u16        skinnedJoints[numSkinnedJoints] <style=sSection1>;
    u16        numExtraJoints;
    u16        extraJoints[numExtraJoints]     <style=sSection2>;
    Bounds     defaultBounds;
    u32        numLods;
    f32        maxLodDeviations[5];
    StrP32List blendShapeNames;
    Vec3       unknown1;
    Vec3       unknown2;
    Vec3       unknown3;
    f32        jointBoundRadius[/* skeleton.numJoints8 */] <style=sSection3>;
} header <style=sHeading1>;

typedef struct {
    u32    numVerts;
    u32    numFaces;
    u8     influence;
    Bounds bounds;
    Vec3   vertexOffset;
    f32    vertexScale;
    Vec2   uvOffset;
    f32    uvScale;
    u32    vertexMask;
    f32    unknown2;
    f32    unknown3;
    u16    unknown4;
} Md6LodInfo;

typedef struct {
    StrP32 meshName;
    StrP32 materialName;
    i32    unknown1;
    i32    unknown2;
    i16    unknown3;

    local int i;
    for (i = 0; i < header.numLods; i++) {
        u32 absent;
        if (!absent) {
            Md6LodInfo lodInfo;
        }
    }

    u8  morphMapPresent;
    Assert ( !morphMapPresent );
    u32 blendShapesPresent;
    Assert ( !blendShapesPresent );
} Md6MeshInfo;

typedef struct {
    StrP32 materialName;
    u32    renderSurface;
    u32    firstVertex;
    u32    lastVertex;
} Md6SurfaceInfo;

typedef struct {
    StrP32 name;
    u32    unk0;
    u32    unk1[5];
} Md6MeshWound;

typedef struct {
    StrP32       name;
    Vec4         vec4;
    uint         numMeshWounds;
    Md6MeshWound meshWounds[numMeshWounds] <optimize=false>;
} Md6ModelWound;

typedef struct {
    StrP32 geoDecalMaterialName;
    uint numStreams;
    uint streamSizes[numStreams];
    local uint i;
    local uint numElements = 0;
    for (i = 0; i < numStreams; i++) {
        numElements += streamSizes[i];
    }
    uint decals[numElements];
} Md6GeoDecal;

typedef struct {
    u32 vertexIDsOffsets;
    u32 vertexWeightsOffset;
    u32 numVertices;
} Md6WoundOffset;


u32            numMeshes;
Md6MeshInfo    meshInfo[numMeshes] <optimize=false, style=sSection4>;
u32            numSurfaceInfos;
Md6SurfaceInfo surfaceInfos[numSurfaceInfos] <optimize=false, style=sSection1>;
u32            numModelWounds;
u32            numMeshWounds;
u32            unknown;
Md6ModelWound  modelWounds[numModelWounds] <optimize=false, style=sSection2>;
Md6GeoDecal    geoDecals <style=sSection3>;
u32            numStreams;
Md6WoundOffset woundOffsets[numStreams] <style=sSection4>;
GeoDiskLayout  geoDiskLayouts[numStreams] <style=sSection1>;
