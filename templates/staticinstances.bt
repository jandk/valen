#include <common/common.bt>

struct StaticInstances {
    uint32 lightRigCount; // always 1
    uint32 numMaterials;
    SString materials[numMaterials - 1] <optimize=false, style=sSection1>;

    uint32 declCount;
    SString decls[declCount - 1] <optimize=false, style=sSection2>;
    
    uint32 list4Count;
    SString list4[list4Count] <optimize=false, style=sSection3>;
    
    uint32 modelCount;
    SString models[modelCount] <optimize=false, style=sSection4>;
    
    uint32 group1Count;
    struct {
        uint32 a;
        uint32 b;
    } groups1[group1Count] <style=sSection1>;
    
    uint32 group2Count;
    struct {
        uint32 a;
        uint32 b;
    } groups2[group2Count] <style=sSection2>;
    
    uint32 count;
    FSeek(FTell() + count * 8);
    
    uint32 count1;
    SString something1[count1] <optimize=false, style=sSection3>;
    
    uint32 count2;
    SString something2[count2] <optimize=false, style=sSection4>;
    
    struct {
        byte bytes[76];
    } unknowns2[count2] <style=sSection1>;
    
    uint32 count3;
    struct {
        byte bytes[152];
    } unknowns3[count3] <style=sSection2>;
    
    uint32 count4;
    SString something4[count4] <optimize=false, style=sSection3>;
    struct {
        byte bytes[56];
    } unknowns4[count4] <style=sSection3>;
    
    uint32 count5;
    struct {
        byte bytes[96];
    } unknowns5[count5] <style=sSection4>;
    
    uint32 count6;
    struct {
        SString something;
        uint32 unk1;
        uint32 unk2;
        uint32 unk3;
        byte unk4;
    } unknown6[count6] <optimize=false, style=sSection1>;
    
    uint32 count7;
    struct {
        SString unk1;
        SString unk2;
    } unknown7[count7] <optimize=false, style=sSection2>;
} si;