#include "common.bt"

struct Md6AnimHeader {
    SString skelName;
    Bounds bounds[2];
    uint size;
};

struct Md6AnimData {
	ubyte pad1[8];
	uint totalSize;
	ushort size;
	ushort flags;
	ushort numFrames;
	ushort frameRate;
	ushort numFrameSets;
	ushort frameSetTblOffset;
	ushort frameSetOffsetTblOffset;
	ushort constROffset;
	ushort constSOffset;
	ushort constTOffset;
	ushort constUOffset;
	ushort nextSize;
	ushort jointWeightsOffset;
	ubyte pad2[2];
	float startDelta[12];
	float endDelta[12];
	ubyte pad3[8];
};

struct Md6AnimMap {
	ushort constRRLEOffset;
	ushort constSRLEOffset;
	ushort constTRLEOffset;
	ushort constURLEOffset;
	ushort animRRLEOffset;
	ushort animSRLEOffset;
	ushort animTRLEOffset;
	ushort animURLEOffset;

    local uint32 position = FTell();

    FSeek(startof(this) - 4 + constRRLEOffset); ubyte constRRLELength;
    FSeek(startof(this) - 4 + constSRLEOffset); ubyte constSRLELength;
    FSeek(startof(this) - 4 + constTRLEOffset); ubyte constTRLELength;
    FSeek(startof(this) - 4 + constURLEOffset); ubyte constURLELength;
    FSeek(startof(this) - 4 + animRRLEOffset);  ubyte animRRLELength;
    FSeek(startof(this) - 4 + animSRLEOffset);  ubyte animSRLELength;
    FSeek(startof(this) - 4 + animTRLEOffset);  ubyte animTRLELength;
    FSeek(startof(this) - 4 + animURLEOffset);  ubyte animURLELength;

    FSeek(position);
};

struct Md6AnimMaps {
    ushort animMapCount;
    ushort tableCrc[animMapCount];
    Md6AnimMap animMaps[animMapCount] <optimize=false>;
};

struct FrameSet {
	ushort firstROffset;
	ushort firstSOffset;
	ushort firstTOffset;
	ushort firstUOffset;
	ushort rangeROffset;
	ushort rangeSOffset;
	ushort rangeTOffset;
	ushort rangeUOffset;
	ushort RBitsOffset;
	ushort SBitsOffset;
	ushort TBitsOffset;
	ushort UBitsOffset;
	ushort nextROffset;
	ushort nextSOffset;
	ushort nextTOffset;
	ushort nextUOffset;
	ushort totalSize;
	ushort frameStart;
	ushort frameRange;
	char pad[10];
};

struct Smallest3 {
    uint16 a15 : 15;
    uint16 a1  :  1;
    uint16 b15 : 15;
    uint16 b1  :  1;
    uint16 c15 : 15;
    uint16 c1  :  1;
};

struct Md6Anim {
    Md6AnimHeader header   <style=sHeading1>;
    Md6AnimData   data     <style=sHeading2>;
    Md6AnimMaps   animMaps <style=sSection1>;
    
    local int start = startof(data);
    
    FSeek(start + data.frameSetTblOffset);
    ubyte frameSetTbl[data.numFrames] <style=sSection2>;
    FSeek(start + data.frameSetOffsetTblOffset);
    uint frameSetOffsetTbl[data.numFrameSets + 1] <style=sSection2>;
    
    local int i;
    local uint fsStart;
    for(i = 0; i < data.numFrameSets; i++) {
        fsStart = start + frameSetOffsetTbl[i] * 16;
        FSeek(fsStart);
        FrameSet frameSet <style=sSection3>;
    }
    
    FSeek(start + data.constROffset);
    Smallest3 constR[animMaps.animMaps[0].constRRLELength] <style=sSection4>;
    FSeek(start + data.constSOffset);
    Vector3   constS[animMaps.animMaps[0].constSRLELength] <style=sSection4>;
    FSeek(start + data.constTOffset);
    Vector3   constT[animMaps.animMaps[0].constTRLELength] <style=sSection4>;
    FSeek(start + data.constUOffset);
    Vector3   constU[animMaps.animMaps[0].constURLELength] <style=sSection4>;
} anim;
