#ifndef COMMON_H
#define COMMON_H

typedef struct {
    uint size;
    char value[size];
} SString<read=Str("%s", size > 0 ? this.value : "")>;

struct Vector2 {
    float x;
    float y;
};

struct Vector3 {
    float x;
    float y;
    float z;
};

struct Vector4 {
    float x;
    float y;
    float z;
    float w;
};

struct Mat3 {
    Vector3 mat[3];
};

struct Mat3x4 {
    float mat[12];
};

struct Bounds {
    Vector3 min;
    Vector3 max;
};

struct GeometryDiskLayout {
    uint compression;
    uint uncompressedSize;
    uint compressedSize;
    uint offset;
};

struct GeometryMemoryLayout {
    uint combinedVertexMask;
    uint size;
    uint numVertexStreams;
    uint vertexMasks[numVertexStreams];
    uint vertexOffsets[numVertexStreams];
    uint indexOffset;
};

#endif // COMMON_H
