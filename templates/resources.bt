struct ResourcesHeader {
    uint32 magic;
    uint32 version;
    
    uint32 unk08;
    uint32 unk0C;
    uint64 unk10;
    uint64 unk18;
    
    uint32 numFileEntries;
    uint32 numDependencyEntries;
    uint32 numDependencyIndexes;
    uint32 numPathStringIndexes;
    
    uint32 unk30;
    uint32 numErrorLogs;
    uint32 sizeStrings;
    uint32 sizeErrorLog;
    
    uint64 addrPathStringOffsets;
    uint64 addrErrorLogs;
    uint64 addrEntries;
    uint64 addrDependencyEntries;
    
    uint64 addrDependencyIndexes;
    uint64 addrData;
    uint32 addrUnk70;
    uint64 addrEndMarker;
};

struct ResourceFileEntry
{
	uint64 resourceTypeString;
	uint64 nameString;
	uint64 descString;
	uint64 depIndices;
	uint64 strings;
	uint64 specialHashes;
	uint64 metaEntries;
	uint64 dataOffset;
	uint64 dataSize;

	uint64 uncompressedSize;
	uint64 dataCheckSum;
	uint64 generationTimeStamp;
	uint64 defaultHash;
	uint32 version;
	uint32 flags;
	ubyte  compMode;
	ubyte  reserved0;
	uint16 variation;
	uint32 reserved2;
	uint64 reservedForVariations;

	uint16 numStrings;
	uint16 numSources;
	uint16 numDependencies;
	uint16 numSpecialHashes;
	uint16 numMetaEntries;
	uint16 pad1;
    uint32 pad2;
};

typedef struct {
    string value;
} WrappedString <read=this.value>;

struct StringChunk {
    uint64 numStrings;
    uint64 offsets[numStrings];
    WrappedString values[numStrings] <optimize=false>;
};

struct ResourceDependency {
	uint64 type;
	uint64 name;
	uint32 depType;
	uint32 depSubType;
	uint64 hashOrTimestamp;
};

struct Resources {
    ResourcesHeader header <style=sHeading1>;
    
    FSeek(header.addrEntries);
    ResourceFileEntry entries[header.numFileEntries] <style=sHeading2>;

    FSeek(header.addrPathStringOffsets);
    StringChunk stringChunk <style=sHeading3>;
    
    FSeek(header.addrDependencyEntries);
    ResourceDependency dependencies[header.numDependencyEntries] <style=sHeading4>;
    uint32 dependencyIndex[header.numDependencyIndexes] <style=sHeading1>;
    uint64 stringIndex[header.numPathStringIndexes] <style=sHeading2>;
} resources;
